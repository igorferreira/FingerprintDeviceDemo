<?xml version="1.0" encoding="UTF-8"?> 

<beans xmlns="http://www.springframework.org/schema/beans" 

    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" 

    xmlns:context="http://www.springframework.org/schema/context" 

    xmlns:mvc="http://www.springframework.org/schema/mvc" 
     xmlns:task="http://www.springframework.org/schema/task"

    xsi:schemaLocation="http://www.springframework.org/schema/beans   

                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   

                        http://www.springframework.org/schema/context   

                        http://www.springframework.org/schema/context/spring-context-3.1.xsd   

                        http://www.springframework.org/schema/mvc   

                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                         http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd"> 

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 --> 

    <context:component-scan base-package="com.timmy.controller" /> 
   
    <!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->

    <mvc:annotation-driven/>

    <!-- 静态资源处理  css js imgs -->

    <mvc:resources location="/resources/**" mapping="/resources"/>

   

    <!--避免IE执行AJAX时，返回JSON出现下载文件 --> 

    <bean id="mappingJacksonHttpMessageConverter" 

        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> 

        <property name="supportedMediaTypes"> 

            <list> 

                <value>text/html;charset=UTF-8</value> 

            </list> 

        </property> 

    </bean> 

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 --> 

    <bean 

        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 

        <property name="messageConverters"> 

            <list> 

                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 --> 

            </list> 

        </property> 

    </bean> 

     

        <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 --> 
    <!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</bean>
  

  

   

    <!-- 配置ViewResolver 。可用多个ViewResolver 。使用order属性排序。   InternalResourceViewResolver 放在最后-->

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">

    <property name="order" value="1"></property>

        <property name="mediaTypes">

            <map>

                <!-- 告诉视图解析器，返回的类型为json格式 -->

                <entry key="json" value="application/json" />

                <entry key="xml" value="application/xml" />

                <entry key="htm" value="text/htm" />

            </map>

        </property>

        <property name="defaultViews">

            <list>

                <!-- ModelAndView里的数据变成JSON -->

                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />

            </list>

        </property>

        <property name="ignoreAcceptHeader" value="true"></property>

    </bean>

   

   <!-- 定义跳转的文件的前后缀 ，视图模式配置--> 

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 

        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 --> 

        <property name="prefix" value="/" /> 

        <property name="suffix" value=".jsp" /> 

    </bean> 
     <bean id="CheckMachineStatus" class="com.timmy.job.CheckMachineStatus"></bean>
  <!--   <task:scheduled-tasks>  
       <task:scheduled ref="CheckMachineStatus" method="doJob" cron="0 */1 * * * ?"/>  
    </task:scheduled-tasks>      
 -->
</beans> 